<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.1 $ -->
 <reference id="ref.freeimage">
  <title> functions</title>
  <titleabbrev></titleabbrev>

  <partintro>
   &warn.experimental;
   <para>
   </para>
  </partintro>


  <refentry id="function.freeimage-load">
   <refnamediv>
    <refname>freeimage_load</refname>
    <refpurpose>Decodes a bitmap, allocates memory for it and then returns it as a FIBITMAP.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_load</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-save">
   <refnamediv>
    <refname>freeimage_save</refname>
    <refpurpose>Saves a previously loaded FIBITMAP to a file.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_save</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-unload">
   <refnamediv>
    <refname>freeimage_unload</refname>
    <refpurpose>Deletes a previously loaded FIBITMAP from memory.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>freeimage_unload</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-clone">
   <refnamediv>
    <refname>freeimage_clone</refname>
    <refpurpose>Makes an exact reproduction of an existing bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_clone</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getversion">
   <refnamediv>
    <refname>freeimage_getversion</refname>
    <refpurpose>Returns a string containing the current version of the DLL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getversion</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getcopyrightmessage">
   <refnamediv>
    <refname>freeimage_getcopyrightmessage</refname>
    <refpurpose>Returns a string containing a standard copyright message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getcopyrightmessage</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getlasterror">
   <refnamediv>
    <refname>freeimage_getlasterror</refname>
    <refpurpose>Returns the last error message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getlasterror</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getimagetype">
   <refnamediv>
    <refname>freeimage_getimagetype</refname>
    <refpurpose>Returns the data type of a bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getimagetype</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getcolorsused">
   <refnamediv>
    <refname>freeimage_getcolorsused</refname>
    <refpurpose>Returns the number of colors used in a bitmap. This function returns the palette-size for palletised bitmaps, and 0 for high-colour bitmaps.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getcolorsused</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getbpp">
   <refnamediv>
    <refname>freeimage_getbpp</refname>
    <refpurpose>Returns the size of one pixel in the bitmap in bits. Possible bit depths are 1, 4, 8, 16, 24, 32, 64 and 128.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getbpp</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getwidth">
   <refnamediv>
    <refname>freeimage_getwidth</refname>
    <refpurpose>Returns the width of the bitmap in pixels.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getwidth</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getheight">
   <refnamediv>
    <refname>freeimage_getheight</refname>
    <refpurpose>Returns the height of the bitmap in pixels.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getheight</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getline">
   <refnamediv>
    <refname>freeimage_getline</refname>
    <refpurpose>Returns the width of the bitmap in bytes.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getline</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getpitch">
   <refnamediv>
    <refname>freeimage_getpitch</refname>
    <refpurpose>Returns the width of the bitmap in bytes, rounded to the next 32-bit boundary, also known as pitch or stride or scan width.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getpitch</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getdibsize">
   <refnamediv>
    <refname>freeimage_getdibsize</refname>
    <refpurpose>Returns the size of the DIB-element of a FIBITMAP in memory, i.e. the BITMAPINFOHEADER + palette + data bits.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getdibsize</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfiletype">
   <refnamediv>
    <refname>freeimage_getfiletype</refname>
    <refpurpose>Returns one of the predefined FREE_IMAGE_FORMAT constants or a bitmap identification number registered by a plugin.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getfiletype</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int
       <parameter><optional>size</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfifcount">
   <refnamediv>
    <refname>freeimage_getfifcount</refname>
    <refpurpose>Retrieves the number of FREE_IMAGE_FORMAT identifiers being currently registered.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getfifcount</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-setpluginenabled">
   <refnamediv>
    <refname>freeimage_setpluginenabled</refname>
    <refpurpose>Enables or disables a plugin.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_setpluginenabled</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
      <paramdef>bool
       <parameter><optional>enable</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-ispluginenabled">
   <refnamediv>
    <refname>freeimage_ispluginenabled</refname>
    <refpurpose>Returns TRUE when the plugin is enabled, FALSE when the plugin is disabled, -1 otherwise.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_ispluginenabled</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfiffromformat">
   <refnamediv>
    <refname>freeimage_getfiffromformat</refname>
    <refpurpose>Returns a FREE_IMAGE_FORMAT identifier from the format string that was used to register the FIF.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getfiffromformat</function></funcdef>
      <paramdef>string <parameter>format</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfiffrommime">
   <refnamediv>
    <refname>freeimage_getfiffrommime</refname>
    <refpurpose>Returns a FREE_IMAGE_FORMAT identifier from a MIME content type string (MIME stands for Multipurpose Internet Mail Extension).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getfiffrommime</function></funcdef>
      <paramdef>string <parameter>mime</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getformatfromfif">
   <refnamediv>
    <refname>freeimage_getformatfromfif</refname>
    <refpurpose>Returns the string that was used to register a plugin from the system assigned FREE_IMAGE_FORMAT.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getformatfromfif</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfifextensionlist">
   <refnamediv>
    <refname>freeimage_getfifextensionlist</refname>
    <refpurpose>Returns a comma-delimited file extension list describing the bitmap formats the given plugin can read and/or write.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getfifextensionlist</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfifdescription">
   <refnamediv>
    <refname>freeimage_getfifdescription</refname>
    <refpurpose>Returns a descriptive string that describes the bitmap formats the given plugin can read and/or write.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getfifdescription</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfifregexpr">
   <refnamediv>
    <refname>freeimage_getfifregexpr</refname>
    <refpurpose>Returns a regular expression string that can be used by a regular expression engine to identify the bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>freeimage_getfifregexpr</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getfiffromfilename">
   <refnamediv>
    <refname>freeimage_getfiffromfilename</refname>
    <refpurpose>Returns the plugin that can read/write files with that extension in the form of a FREE_IMAGE_FORMAT identifier.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getfiffromfilename</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-fifsupportsreading">
   <refnamediv>
    <refname>freeimage_fifsupportsreading</refname>
    <refpurpose>Returns TRUE if the plugin belonging to the given FREE_IMAGE_FORMAT can be used to load bitmaps, FALSE otherwise.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_fifsupportsreading</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-fifsupportswriting">
   <refnamediv>
    <refname>freeimage_fifsupportswriting</refname>
    <refpurpose>Returns TRUE if the plugin belonging to the given FREE_IMAGE_FORMAT can be used to save bitmaps, FALSE otherwise.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_fifsupportswriting</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-rotate">
   <refnamediv>
    <refname>freeimage_rotate</refname>
    <refpurpose>Rotates an 8-bit greyscale, 24- or 32-bit image by means of 3 shears.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_rotate</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>double <parameter>angle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-rotateex">
   <refnamediv>
    <refname>freeimage_rotateex</refname>
    <refpurpose>Performs a rotation and / or translation of an 8-bit greyscale, 24- or 32-bit image, using a 3rd order (cubic) B-Spline.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_rotateex</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>double <parameter>angle</parameter></paramdef>
      <paramdef>double <parameter>x_shift</parameter></paramdef>
      <paramdef>double <parameter>y_shift</parameter></paramdef>
      <paramdef>double <parameter>x_origin</parameter></paramdef>
      <paramdef>double <parameter>y_origin</parameter></paramdef>
      <paramdef>bool <parameter>use_mask</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-fliphorizontal">
   <refnamediv>
    <refname>freeimage_fliphorizontal</refname>
    <refpurpose>Flip the input bitmap horizontally along the vertical axis.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_fliphorizontal</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-flipvertical">
   <refnamediv>
    <refname>freeimage_flipvertical</refname>
    <refpurpose>Flip the input bitmap vertically along the horizontal axis.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_flipvertical</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-rescale">
   <refnamediv>
    <refname>freeimage_rescale</refname>
    <refpurpose>Performs resampling (or scaling, zooming) of a 8-, 24- or 32-bit image to the desired destination width and height.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>freeimage_rescale</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>int <parameter>dst_width</parameter></paramdef>
      <paramdef>int <parameter>dst_height</parameter></paramdef>
      <paramdef>int <parameter>filter</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-gamma">
   <refnamediv>
    <refname>freeimage_gamma</refname>
    <refpurpose>Performs gamma correction on a 8-, 24- or 32-bit image. The function returns TRUE on success. It returns FALSE when gamma is less than or equal to zero or when the bitdepth of the source bitmap cannot be handled.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_gamma</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>double <parameter>gamma</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-brightness">
   <refnamediv>
    <refname>freeimage_brightness</refname>
    <refpurpose>Adjusts the brightness of a 8-, 24- or 32-bit image by a certain amount. This amount is given by the percentage parameter, where percentage is a value between [-100..100]. A value 0 means no change, less than 0 will make the image darker and greater than 0 will make the image brighter. The function returns TRUE on success, FALSE otherwise (e.g. when the bitdepth of the source bitmap cannot be handled).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_brightness</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>double <parameter>percentage</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-contrast">
   <refnamediv>
    <refname>freeimage_contrast</refname>
    <refpurpose>Adjusts the contrast of a 8-, 24- or 32-bit image by a certain amount. This amount is given by the percentage parameter, where percentage is a value between [-100..100]. A value 0 means no change, less than 0 will decrease the contrast and greater than 0 will increase the contrast of the image. The function returns TRUE on success, FALSE otherwise (e.g. when the bitdepth of the source bitmap cannot be handled).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_contrast</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>double <parameter>percentage</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-invert">
   <refnamediv>
    <refname>freeimage_invert</refname>
    <refpurpose>Inverts each pixel data.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_invert</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-copy">
   <refnamediv>
    <refname>freeimage_copy</refname>
    <refpurpose>Copy a sub part of the current bitmap image and returns it as a FIBITMAP*. The function returns the subimage if successful, NULL otherwise.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>freeimage_copy</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>int <parameter>left</parameter></paramdef>
      <paramdef>int <parameter>top</parameter></paramdef>
      <paramdef>int <parameter>right</parameter></paramdef>
      <paramdef>int <parameter>bottom</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-parse">
   <refnamediv>
    <refname>freeimage_parse</refname>
    <refpurpose>Alpha blend or combine a sub part image with the current bitmap image. The function returns TRUE if successful, FALSE otherwise.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>freeimage_parse</function></funcdef>
      <paramdef>resource <parameter>dst</parameter></paramdef>
      <paramdef>resource <parameter>src</parameter></paramdef>
      <paramdef>int <parameter>left</parameter></paramdef>
      <paramdef>int <parameter>top</parameter></paramdef>
      <paramdef>int <parameter>alpha</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-composite">
   <refnamediv>
    <refname>freeimage_composite</refname>
    <refpurpose>This function composite a foreground image against a single background color or against a background image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_composite</function></funcdef>
      <paramdef>resource <parameter>fg</parameter></paramdef>
      <paramdef>bool
       <parameter><optional>usefilebkg</optional></parameter>
      </paramdef>
      <paramdef>mixed
       <parameter><optional>bkcolor</optional></parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>bg</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-convertto8bits">
   <refnamediv>
    <refname>freeimage_convertto8bits</refname>
    <refpurpose>Converts a bitmap to 8 bits. If the bitmap was a high-color bitmap (16, 24 or 32-bit) or if it was a monochrome or greyscale bitmap (1 or 4-bit), the end result will be a greyscale bitmap, otherwise (1 or 4-bit palletised bitmaps) it will be a palletised bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_convertto8bits</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-convertto16bits555">
   <refnamediv>
    <refname>freeimage_convertto16bits555</refname>
    <refpurpose>Converts a bitmap to 16 bits, where each pixel has a color pattern of 5 bits red, 5 bits green and 5 bits blue. One bit in each pixel is unused.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_convertto16bits555</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-convertto16bits565">
   <refnamediv>
    <refname>freeimage_convertto16bits565</refname>
    <refpurpose>Converts a bitmap to 16 bits, where each pixel has a color pattern of 5 bits red, 6 bits green and 5 bits blue.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_convertto16bits565</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-convertto24bits">
   <refnamediv>
    <refname>freeimage_convertto24bits</refname>
    <refpurpose>Converts a bitmap to 24 bits.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_convertto24bits</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-convertto32bits">
   <refnamediv>
    <refname>freeimage_convertto32bits</refname>
    <refpurpose>Converts a bitmap to 32 bits.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_convertto32bits</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-colorquantize">
   <refnamediv>
    <refname>freeimage_colorquantize</refname>
    <refpurpose>Quantizes a high-color 24-bit bitmap to an 8-bit palette color bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_colorquantize</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>int <parameter>quantize</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-threshold">
   <refnamediv>
    <refname>freeimage_threshold</refname>
    <refpurpose>Converts a bitmap to 1-bit monochrome bitmap using a threshold T between [0..255].</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_threshold</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>int <parameter>threshold</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-dither">
   <refnamediv>
    <refname>freeimage_dither</refname>
    <refpurpose>Converts a bitmap to 1-bit monochrome bitmap using a dithering algorithm.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_dither</function></funcdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>int <parameter>algorithm</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-openmultibitmap">
   <refnamediv>
    <refname>freeimage_openmultibitmap</refname>
    <refpurpose>Opens a multi-paged bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_openmultibitmap</function></funcdef>
      <paramdef>int <parameter>fif</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>bool <parameter>create_new</parameter></paramdef>
      <paramdef>bool <parameter>read_only</parameter></paramdef>
      <paramdef>bool
       <parameter><optional>keep_cache_in_memory</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-closemultibitmap">
   <refnamediv>
    <refname>freeimage_closemultibitmap</refname>
    <refpurpose>Closes a previously opened multi-page bitmap and, when the bitmap was not opened read-only, applies any changes made to it.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_closemultibitmap</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getpagecount">
   <refnamediv>
    <refname>freeimage_getpagecount</refname>
    <refpurpose>Returns the number of pages currently available in the multi-paged bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getpagecount</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-appendpage">
   <refnamediv>
    <refname>freeimage_appendpage</refname>
    <refpurpose>Appends a new page to the end of the bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>freeimage_appendpage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-insertpage">
   <refnamediv>
    <refname>freeimage_insertpage</refname>
    <refpurpose>Inserts a new page before the given position in the bitmap. Page has to be a number smaller than the current number of pages available in the bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>freeimage_insertpage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-deletepage">
   <refnamediv>
    <refname>freeimage_deletepage</refname>
    <refpurpose>Deletes the page on the given position.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>freeimage_deletepage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-lockpage">
   <refnamediv>
    <refname>freeimage_lockpage</refname>
    <refpurpose>Locks a page in memory for editing. The page can now be saved to a different file or inserted into another multi-page bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>freeimage_lockpage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-unlockpage">
   <refnamediv>
    <refname>freeimage_unlockpage</refname>
    <refpurpose>Unlocks a previously locked page and gives it back to the multi-page engine. When the last parameter is TRUE, the page is marked changed and the new page data is applied in the multi-page bitmap.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>freeimage_unlockpage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>resource <parameter>bitmap</parameter></paramdef>
      <paramdef>bool <parameter>changed</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-movepage">
   <refnamediv>
    <refname>freeimage_movepage</refname>
    <refpurpose>Moves the source page to the position of the target page. Returns TRUE on success, FALSE on failure.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>freeimage_movepage</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int <parameter>target_page</parameter></paramdef>
      <paramdef>int <parameter>source_page</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.freeimage-getlockedpagenumbers">
   <refnamediv>
    <refname>freeimage_getlockedpagenumbers</refname>
    <refpurpose>Returns an array of page-numbers that are currently locked in memory. When the pages parameter is NULL, the size of the array is returned in the count variable. You can then allocate the array of the desired size and call FreeImage_GetLockedPageNumbers again to populate the array.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>freeimage_getlockedpagenumbers</function></funcdef>
      <paramdef>resource <parameter>multibitmap</parameter></paramdef>
      <paramdef>int <parameter>pages</parameter></paramdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

